{
    "license": "GPL-3.0-or-later", 
    "upload_type": "software", 
    "creators": [
        {
            "orcid": "0000-0003-1072-8559", 
            "affiliation": "Stockton University", 
            "name": "Vincent A. Cicirello"
        }
    ], 
    "keywords": [
		"Ziggurat",
		"Gaussian",
		"Java"
	],
	"description": "<p>Java implementation of the Ziggurat algorithm for generating Gaussian distributed pseudorandom numbers. The Ziggurat algorithm is significantly faster than the  more commonly encountered Polar method, and has some other desirable statistical properties. The ZigguratGaussian class is a Java port of the GNU Scientific Library's C implementation (Voss, 2005) of the Ziggurat method. In porting to Java, we have made several optimizations, the details of which can be found in the source code comments, which highlights any 	differences between this Java implementation and the C implementation on which it is based. This package also includes an implementation of the Polar Method, included to enable comparing speed advantage of the Ziggurat algorithm.</p>",
	"notes": "<p>This originated as part of an effort to speed up the runtime of a genetic algorithm by optimizing random number generation. You can find some experimental data comparing the  performance of a sequential genetic algorithm (GA) using this implementation of the Ziggurat method for Gaussian mutation vs using the more common polar method, as well as experimental data for the same comparison but with a Parallel GA, in the following paper</p><p>V. A. Cicirello. <a href=https://www.cicirello.org/publications/cicirello2018flairs.html>Impact of Random Number Generation on Parallel Genetic Algorithms</a>. Proceedings of the Thirty-First International Florida Artificial Intelligence Research Society Conference, pages 2-7. AAAI Press, May 2018.</p>"
}